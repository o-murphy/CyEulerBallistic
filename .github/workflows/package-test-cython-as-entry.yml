# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python cythonized package tests (uv)

on:
  pull_request:
    branches:
      - '*'
  workflow_dispatch:


jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-13, macos-14 ]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
        submodules-depth: 0

    - name: Install uv and set the python version ${{ matrix.python-version }}
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |     
        uv sync --dev

    - name: Build cython modules
      run: |
        uv pip install -e .[dev]

    - name: Install from pr #170
      run: |      
        uv pip uninstall py_ballisticcalc
        cd py-ballisticcalc
        git checkout engine_entry_point
        uv pip install -e .[dev]
        cd ../

    - name: Run unittest tests in binary mode
      run: |
        cd py-ballisticcalc
        pytest tests --no-header --no-summary -v --engine CyEulerBallistic 
        if [ $? -ne 0 ]; then
          echo "Pytest failed, running without capture"
        pytest tests -v --engine CyEulerBallistic 
        else
          echo "Pytest succeeded."
        fi
      shell: bash
      if: runner.os != 'Windows'

    - name: Run unittest tests in binary mode on Windows
      run: |
        cd py-ballisticcalc
        pytest tests --no-header --no-summary -v --engine CyEulerBallistic 
        if %ERRORLEVEL% neq 0 (
          echo Pytest failed, running without capture
          pytest tests -v --engine CyEulerBallistic 
        ) else (
          echo Pytest succeeded.
        )
      shell: cmd
      if: runner.os == 'Windows'
